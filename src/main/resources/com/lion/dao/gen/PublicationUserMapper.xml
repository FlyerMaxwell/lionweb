<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lion.dao.gen.PublicationUserMapper">
  <resultMap id="BaseResultMap" type="com.lion.entity.PublicationUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pub_id" jdbcType="BIGINT" property="pubId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="last_modifier" jdbcType="VARCHAR" property="lastModifier" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pub_id, user_id, create_time, update_time, last_modifier, last_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_publication_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_publication_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lion.entity.PublicationUser">
    insert into t_publication_user (id, pub_id, user_id, 
      create_time, update_time, last_modifier, 
      last_ip)
    values (#{id,jdbcType=BIGINT}, #{pubId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{lastModifier,jdbcType=VARCHAR}, 
      #{lastIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lion.entity.PublicationUser">
    insert into t_publication_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pubId != null">
        pub_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lastModifier != null">
        last_modifier,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pubId != null">
        #{pubId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifier != null">
        #{lastModifier,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lion.entity.PublicationUser">
    update t_publication_user
    <set>
      <if test="pubId != null">
        pub_id = #{pubId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifier != null">
        last_modifier = #{lastModifier,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lion.entity.PublicationUser">
    update t_publication_user
    set pub_id = #{pubId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_modifier = #{lastModifier,jdbcType=VARCHAR},
      last_ip = #{lastIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>